Устойчивая сортировка - которая одинаковые ключи не меняет местами

---Простые сортировки:---

• Пузырьком (простой обмен) - сравниваем пары чисел, идём слева направо, меняем значения если больше.
• Шейкерная - идём туда-обратно каждый раз уменьшая кол-во шагов на -1, пока не окажемся в центре
• Сортировка простым выбором - находим минимальный элемент, и иеняем его с первым элементом местами, в ост. части - находим минимальный, меняем местами с нужным ему местом и т.д.
• Сортировки вставками - На каждой итерации берём элемент и вставляем в (левую) отсотрированную часть, на своё место. В отсортированной части мы можем искать место вставки бинарным поиском.
• Сортировка двухпутевыми вставками - резервируется массив в 2 раза больше (2n+1), и начиная сортировку с 1го, мы вставлем в середину. Следующие элементы вставляем в нужные стороны. Мы сокращаем число сдвигов в массиве.

---Интересные сортировки:---

• Сортировка Шелла - мы сравниваем не соседние элементы, а на расстоянии шага. 
Шаг может быть равен di = n/2^i. n - колл-во элементов, а i - шаг. (классическая реализация). На каждом шаге уменьшаем шаги /2 (...,8,4,2,1) - пока не дойдём до 1. Потом сортируем любым другим алгоритмом.

• Быстрая сортировка - разбиваем массив на 2 части так, используя опроный элемент, и реорганизуем так, что бы слева и справа от него элементы были, соответственно, меньше и больше этого элемента.

[Сложный алгоритм сортировки]: 
Идём одновременно (с левого конца-направо), и (с правого конца-налево). Если какой-то элемент (справа < опорного), или (слева > опорного), то меняем их местами, и делаем шаг. Идём так, пока не дойдём до опорного элемента.

Далее, рекурсивно, справа и слева от этого опорного элемента, мы также разбиваем массивы на 2, используя в них новые опроные элемены, и т.д.

Опроный элемент мы можем выбирать как захотим:
	Первый 
	Последний 
	Случайный 
	Средний 
	Медиана трёх ((первый, последний, средний), сортируем, выбираем средний)










